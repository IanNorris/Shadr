<ShaderSyntax IndentType="Tabs" NewlineType="Windows" Buckets="Header;Prototypes;Globals;Functions">
	<Program>
		<Iterate Target="Elements" Variable="Element">
			<PrintChild Target="Element"/>
		</Iterate>
	</Program>
	
	<Function>
		<PrintChild Use="TypeGenerator" Target="Prototype.ReturnType"/>
		<Print Literal=" "/>
		<Print Value="Prototype.Name"/>
		
		<Condition IfTrue="Prototype.HasParameters">
			<Print Literal="("/>
			<Iterate Target="Prototype.Parameters" Variable="Parameter">
				<Condition IfTrue="IfFirst(Parameter)">
					<Print Literal=" "/>
				</Condition>
				
				<PrintChild Target="Parameter"/>
				
				<Condition IfTrue="IsLast(Parameter)">
					<Print Literal=" "/>
				</Condition>
				<Condition IfFalse="IsLast(Parameter)">
					<Print Literal=", "/>
				</Condition>
			</Iterate>
			<Print Literal=")"/>
		</Condition>
		<Condition IfFalse="Prototype.HasParameters">
			<Print Literal="( void )"/>
		</Condition>
		
		<PrintChild Target="Body"/>
		<Newline/>
		<Newline/>
	</Function>
	
	<Block>
		<Newline/>
		<Print Literal="{"/>
		<Newline/>
		<AddIndent/>
		<Iterate Target="Statements" Variable="Statement">
			<PrintChild Target="Statement"/>
			<SemiColon/>
			<InsertOriginalNewlines Min="1"/>
		</Iterate>
		<RemoveIndent/>
		<Print Literal="}"/>
	</Block>
	
	<ConstFloat>
		<Print Value="m_fValue"/>
		<Print Literal="f"/>
	</ConstFloat>
	
	<VariableDef>
		<PrintChild Use="TypeGenerator" Target="Type"/>
		<Print Literal=" "/>
		<Iterate Target="Variables" Variable="Variable">
			<Condition IfTrue="Variable.HasAssignment">
				<PrintChild Target="Variable.Assignment"/>
			</Condition>
			<Condition IfFalse="Variable.HasAssignment">
				<Print Value="Variable.Name"/>
			</Condition>
			<Condition IfFalse="IsLast(Variable)">
				<Print Literal=", "/>
			</Condition>
		</Iterate>
		
	</VariableDef>
	
	<!-- Custom types -->
	
	<TypeGenerator>
		<Condition IfTrue="IsConst">
			<Print Literal="const "/>
		</Condition>
		<Print Value="Name"/>
	</TypeGenerator>
</ShaderSyntax>
